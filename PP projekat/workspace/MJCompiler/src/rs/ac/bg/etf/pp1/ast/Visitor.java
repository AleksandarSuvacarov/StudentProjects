// generated with ast extension for cup
// version 0.8
// 26/5/2024 17:16:32


package src.rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(TermList TermList);
    public void visit(CondTermList CondTermList);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(StatementList StatementList);
    public void visit(NamespaceList NamespaceList);
    public void visit(FactorList FactorList);
    public void visit(DeclPart DeclPart);
    public void visit(Factor Factor);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(DesignatorStatementPart DesignatorStatementPart);
    public void visit(DesignatorOp DesignatorOp);
    public void visit(Condition Condition);
    public void visit(ConstValue ConstValue);
    public void visit(MulOp MulOp);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(DesignatorStatementList DesignatorStatementList);
    public void visit(RelOp RelOp);
    public void visit(VarDeclPart VarDeclPart);
    public void visit(ElseStatement ElseStatement);
    public void visit(ActualParamList ActualParamList);
    public void visit(MethodVarDecl MethodVarDecl);
    public void visit(DesignatorPart DesignatorPart);
    public void visit(ExprRelopList ExprRelopList);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(DesignatorList DesignatorList);
    public void visit(AddOp AddOp);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ActualPars ActualPars);
    public void visit(Statement Statement);
    public void visit(CondFactorList CondFactorList);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(MethodDeclTypeName MethodDeclTypeName);
    public void visit(CondFactorFor CondFactorFor);
    public void visit(Label Label);
    public void visit(DesignatorNamespaceIdent DesignatorNamespaceIdent);
    public void visit(DesignatorSimpleIdent DesignatorSimpleIdent);
    public void visit(LessEq LessEq);
    public void visit(Less Less);
    public void visit(GreaterEq GreaterEq);
    public void visit(Greater Greater);
    public void visit(NotEqual NotEqual);
    public void visit(Equal Equal);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(AssignOp AssignOp);
    public void visit(ExprRelopSingle ExprRelopSingle);
    public void visit(ExprRelopMulti ExprRelopMulti);
    public void visit(CondFactor CondFactor);
    public void visit(CondFactSingle CondFactSingle);
    public void visit(CondFactMulti CondFactMulti);
    public void visit(CondTerm CondTerm);
    public void visit(CondTermSingle CondTermSingle);
    public void visit(CondTermMulti CondTermMulti);
    public void visit(ErrorConditions ErrorConditions);
    public void visit(Conditions Conditions);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(ActualParsBegin ActualParsBegin);
    public void visit(FactNewClass FactNewClass);
    public void visit(FactNewArray FactNewArray);
    public void visit(FactParens FactParens);
    public void visit(FactBool FactBool);
    public void visit(FactChar FactChar);
    public void visit(FactNum FactNum);
    public void visit(FactFunc FactFunc);
    public void visit(FactDesg FactDesg);
    public void visit(FactorSingle FactorSingle);
    public void visit(FactorMulti FactorMulti);
    public void visit(Term Term);
    public void visit(MinusTerm MinusTerm);
    public void visit(TermSingle TermSingle);
    public void visit(TermMulti TermMulti);
    public void visit(Expr Expr);
    public void visit(NoDesg NoDesg);
    public void visit(Desg Desg);
    public void visit(DesgSingle DesgSingle);
    public void visit(DesgList DesgList);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorIdentSingle DesignatorIdentSingle);
    public void visit(ErrorDesignatorAssign ErrorDesignatorAssign);
    public void visit(DesignatorDec DesignatorDec);
    public void visit(DesignatorInc DesignatorInc);
    public void visit(DesignatorFunc DesignatorFunc);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(ForBegin ForBegin);
    public void visit(NoConditionFactFor NoConditionFactFor);
    public void visit(ConditionFactFor ConditionFactFor);
    public void visit(DesignatorStatementListPre DesignatorStatementListPre);
    public void visit(DesignatorStatementListPost DesignatorStatementListPost);
    public void visit(NoDesingatorSingle NoDesingatorSingle);
    public void visit(DesignatorSingle DesignatorSingle);
    public void visit(DesignatorStmtSingle DesignatorStmtSingle);
    public void visit(DesignatorStmtList DesignatorStmtList);
    public void visit(DesignatorArrayStmt DesignatorArrayStmt);
    public void visit(DesignatorOpStmt DesignatorOpStmt);
    public void visit(ElseBegin ElseBegin);
    public void visit(NoElseStmt NoElseStmt);
    public void visit(ElseStmt ElseStmt);
    public void visit(IfBegin IfBegin);
    public void visit(ForStmt ForStmt);
    public void visit(BracesStmt BracesStmt);
    public void visit(PrintSizeStmt PrintSizeStmt);
    public void visit(PrintNoSizeStmt PrintNoSizeStmt);
    public void visit(ReadStmt ReadStmt);
    public void visit(ReturnValStmt ReturnValStmt);
    public void visit(ReturnNoValStmt ReturnNoValStmt);
    public void visit(ContinueStmt ContinueStmt);
    public void visit(BreakStmt BreakStmt);
    public void visit(IfStmt IfStmt);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(NoStmtList NoStmtList);
    public void visit(StmtList StmtList);
    public void visit(Type Type);
    public void visit(ErrorFormParamDecl ErrorFormParamDecl);
    public void visit(FormParamDeclArray FormParamDeclArray);
    public void visit(FormParamDeclIdent FormParamDeclIdent);
    public void visit(FormParamDeclSingle FormParamDeclSingle);
    public void visit(FormParamDecl FormParamDecl);
    public void visit(NoFormParams NoFormParams);
    public void visit(FormParams FormParams);
    public void visit(NoMethVarDecl NoMethVarDecl);
    public void visit(MethVarDecl MethVarDecl);
    public void visit(MethDeclTypeNameVoid MethDeclTypeNameVoid);
    public void visit(MethDeclTypeNameIdent MethDeclTypeNameIdent);
    public void visit(MethodDeclPart MethodDeclPart);
    public void visit(NoMethDeclarations NoMethDeclarations);
    public void visit(MethDeclarations MethDeclarations);
    public void visit(ErrorVarDecl ErrorVarDecl);
    public void visit(VarDeclArray VarDeclArray);
    public void visit(VarDeclIdent VarDeclIdent);
    public void visit(VarDeclarationSingle VarDeclarationSingle);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(TypeVar TypeVar);
    public void visit(VarDecl VarDecl);
    public void visit(ConstChar ConstChar);
    public void visit(ConstBool ConstBool);
    public void visit(ConstNumber ConstNumber);
    public void visit(ConstDeclPart ConstDeclPart);
    public void visit(ConstDeclarationSingle ConstDeclarationSingle);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(TypeConst TypeConst);
    public void visit(ConstDecl ConstDecl);
    public void visit(DeclarationsVar DeclarationsVar);
    public void visit(DeclarationsConst DeclarationsConst);
    public void visit(NoDeclarations NoDeclarations);
    public void visit(Declarations Declarations);
    public void visit(NamespaceName NamespaceName);
    public void visit(NamespacePart NamespacePart);
    public void visit(NoNamespaceDeclarations NoNamespaceDeclarations);
    public void visit(NamespaceDeclarations NamespaceDeclarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
