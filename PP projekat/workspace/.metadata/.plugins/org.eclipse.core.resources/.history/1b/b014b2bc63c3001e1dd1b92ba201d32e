//Test 302

program test302

namespace Addition{

	{
	
	int sum(int z, int d)
	{
		return 1;
	}
	

	int inkrement(int a, int inc) 
		int pom; 
	{

		return sum(a,pom);
	}
	
	}
}

namespace Unpacking{
	int niz[],niz2[],niz3[];
	int a,b;
	
	{}
}

int i;
bool ibool;

int niz2;

int niz[];
int a, curr;

{
	
	
	bool verify() {
		print('v');
		return false;
	}	
	
	void main()
	{
		
		niz2 = 0;
		for (i=0; i < 3; i++) niz2 = niz2 + niz[i] * niz[i];
		print(niz2);
		
		Unpacking::niz = new int[4];
		Unpacking::niz[0] = 1;
		Unpacking::niz[1] = 2;
		Unpacking::niz[2] = 6;
		Unpacking::niz[3] = 7;
		
		print(eol);
		Unpacking::niz2 = new int[1];
		[Unpacking::a,Unpacking::b,*Unpacking::niz2] = Unpacking::niz;
		print(Unpacking::a);
		print(Unpacking::b);
		print(Unpacking::niz2[0]);
		print(eol);
		
		Unpacking::niz2 = new int[1];
		[,Unpacking::a,*Unpacking::niz2] = niz;
		print(Unpacking::a);
		print(Unpacking::niz2[0]);
		print(eol);

		Unpacking::niz2 = new int[2];
		Unpacking::niz3 = new int[1];
		[Unpacking::niz2[0],,Unpacking::niz2[Unpacking::niz[0]],*Unpacking::niz3] = Unpacking::niz;

		print(Unpacking::niz2[0]);
		print(Unpacking::niz2[1]);
		print(Unpacking::niz3[0]);
		print(eol);
		
		Unpacking::niz3 = new int[3];
		[*Unpacking::niz3] = niz;
		print(Unpacking::niz3[0]);
		print(Unpacking::niz3[1]);
		print(Unpacking::niz3[2]);
		print(eol);
		
		//Unpacking::niz3 = new int[1];
		//[Unpacking::niz2[0],,,Unpacking::niz2[Unpacking::niz[0]],*Unpacking::niz3] = Unpacking::niz; // runtime error!
	
	}
}

